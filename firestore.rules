rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is part of an organization
    function isUserInOrg(orgId) {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationId == orgId;
    }

    // Helper function to check if the user is a super-admin
    function isSuperAdmin() {
        return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
               get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'super-admin';
    }

    // Users:
    // - Super-admins can read all user documents.
    // - Logged-in users can read their own user document.
    // - Users in the same org can read each other's profiles (needed for ticket assignees, etc.).
    // - Users can update their own profile.
    match /users/{userId} {
      allow read: if isSuperAdmin() || 
                     request.auth.uid == userId ||
                     (exists(/databases/$(database)/documents/users/$(userId)) && 
                      isUserInOrg(get(/databases/$(database)/documents/users/$(userId)).data.organizationId));
      allow write: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId; // Allow creation during signup
    }

    // Organizations:
    // - Super-admins can read all organizations.
    // - Users can read their own organization document.
    // - Super-admins can update any organization (e.g., change plan).
    match /organizations/{orgId} {
      allow read: if isSuperAdmin() || isUserInOrg(orgId);
      allow update: if isSuperAdmin();
    }
    
    // Support Tickets:
    // - Only super-admins can read all support tickets.
    // - Any authenticated user can create a support ticket (for plan changes).
    match /supportTickets/{ticketId} {
        allow read: if isSuperAdmin();
        allow create: if request.auth != null;
    }

    // Projects, Tickets, Proposals, etc.:
    // - Access is granted if the user is part of the organization the document belongs to.
    match /{collection}/{docId} {
      allow read, write: if isUserInOrg(resource.data.organizationId);
    }
  }
}