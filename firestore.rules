
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    /* =========================
       Helpers
       ========================= */
    function userDoc() {
      // Use get() which can return null, and access data with .data
      return get(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    function userRole() {
      return userDoc().data.role;
    }

    function isSuperAdmin() {
      return userDoc().data.role == "super-admin";
    }

    function userOrgId() {
      return userDoc().data.organizationId;
    }
    
    function isOrgMember(orgId) {
      return request.auth != null && userOrgId() == orgId;
    }

    function isOrgOwner(orgId) {
      return request.auth != null &&
             get(/databases/$(database)/documents/organizations/$(orgId)).data.ownerId == request.auth.uid;
    }

    /* =========================
       USERS
       ========================= */
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isSuperAdmin() || isOrgMember(resource.data.organizationId));
      allow create: if request.auth != null;
      allow update: if request.auth != null && (request.auth.uid == userId || isSuperAdmin());
      allow delete: if isSuperAdmin();
    }

    /* =========================
       ORGANIZATIONS
       ========================= */
    match /organizations/{orgId} {
      allow read: if request.auth != null && (isSuperAdmin() || isOrgMember(orgId));
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
        isSuperAdmin() ||
        (isOrgOwner(orgId) && request.resource.data.subscriptionPlan == resource.data.subscriptionPlan)
      );
      allow delete: if isSuperAdmin();
    }
    
    /* =========================
       SUPPORT TICKETS
       ========================= */
    match /supportTickets/{ticketId} {
      allow create: if request.auth != null;
      allow read, update, delete, list: if isSuperAdmin();
    }

    /* =========================
       NOTIFICATIONS
       ========================= */
    match /notifications/{notificationId} {
      allow create: if request.auth != null;
      // User can see their own notifications.
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      // Super admin can see all notifications for debugging
      allow list: if isSuperAdmin();
    }

    /* =========================
       PROJECTS
       ========================= */
    match /projects/{projectId} {
        allow read, list: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
        allow create: if isOrgMember(request.resource.data.organizationId) || isSuperAdmin();
        allow update, delete: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
    }
    
    /* =========================
       TICKETS
       ========================= */
    match /tickets/{ticketId} {
        allow read, list: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
        allow create: if isOrgMember(request.resource.data.organizationId) || isSuperAdmin();
        allow update, delete: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
    }
    
    /* =========================
       PROPOSALS
       ========================= */
    match /proposals/{proposalId} {
        allow read, list: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
        allow create: if isOrgMember(request.resource.data.organizationId) || isSuperAdmin();
        allow update, delete: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
    }
    
    /* =========================
       INVOICES
       ========================= */
    match /invoices/{invoiceId} {
        allow read, list: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
        allow create: if isOrgMember(request.resource.data.organizationId) || isSuperAdmin();
        allow update, delete: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
    }
    
    /* =========================
       CLIENT REPORTS
       ========================= */
    match /clientReports/{reportId} {
        allow read, list: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
        allow create: if isOrgMember(request.resource.data.organizationId) || isSuperAdmin();
        allow update, delete: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
    }
    
    /* =========================
       CHATS
       ========================= */
    match /chats/{chatId} {
        allow read, list: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
        allow create: if isOrgMember(request.resource.data.organizationId) || isSuperAdmin();
        allow update, delete: if isOrgMember(resource.data.organizationId) || isSuperAdmin();
        
        // Chat Messages subcollection
        match /messages/{messageId} {
            allow read, list, create: if isOrgMember(orgIdFromParent('chats', chatId)) || isSuperAdmin();
            allow update, delete: if isSuperAdmin(); // Or based on message owner
        }
    }
  }
}
